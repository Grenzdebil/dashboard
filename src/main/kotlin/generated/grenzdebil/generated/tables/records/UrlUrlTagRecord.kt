/*
 * This file is generated by jOOQ.
 */
package grenzdebil.generated.tables.records


import grenzdebil.generated.tables.UrlUrlTag

import org.jooq.Field
import org.jooq.Record2
import org.jooq.Row2
import org.jooq.impl.UpdatableRecordImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UrlUrlTagRecord() : UpdatableRecordImpl<UrlUrlTagRecord>(UrlUrlTag.URL_URL_TAG), Record2<Int?, Int?> {

    open var urlId: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var tagId: Int?
        set(value): Unit = set(1, value)
        get(): Int? = get(1) as Int?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record2<Int?, Int?> = super.key() as Record2<Int?, Int?>

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    override fun fieldsRow(): Row2<Int?, Int?> = super.fieldsRow() as Row2<Int?, Int?>
    override fun valuesRow(): Row2<Int?, Int?> = super.valuesRow() as Row2<Int?, Int?>
    override fun field1(): Field<Int?> = UrlUrlTag.URL_URL_TAG.URL_ID
    override fun field2(): Field<Int?> = UrlUrlTag.URL_URL_TAG.TAG_ID
    override fun component1(): Int? = urlId
    override fun component2(): Int? = tagId
    override fun value1(): Int? = urlId
    override fun value2(): Int? = tagId

    override fun value1(value: Int?): UrlUrlTagRecord {
        this.urlId = value
        return this
    }

    override fun value2(value: Int?): UrlUrlTagRecord {
        this.tagId = value
        return this
    }

    override fun values(value1: Int?, value2: Int?): UrlUrlTagRecord {
        this.value1(value1)
        this.value2(value2)
        return this
    }

    /**
     * Create a detached, initialised UrlUrlTagRecord
     */
    constructor(urlId: Int? = null, tagId: Int? = null): this() {
        this.urlId = urlId
        this.tagId = tagId
    }

    /**
     * Create a detached, initialised UrlUrlTagRecord
     */
    constructor(value: grenzdebil.generated.tables.pojos.UrlUrlTag?): this() {
        if (value != null) {
            this.urlId = value.urlId
            this.tagId = value.tagId
        }
    }
}
